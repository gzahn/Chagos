ps@sam_data$`Depth Range (m)`[is.na(ps@sam_data$`Depth Range (m)`)] <- "NA-NA"
ps@sam_data$`Depth Range (m)`[ps@sam_data$`Depth Range (m)`=="Blank"] <- "Blank-Blank"
min <- as.numeric(unlist(map(str_split(ps@sam_data$`Depth Range (m)`,"-"),1)))
max <- as.numeric(unlist(map(str_split(ps@sam_data$`Depth Range (m)`,"-"),2)))
ps@sam_data$DepthRangeMin <- min
ps@sam_data$DepthRangeMax <- max
# Remove Blank Controls ####
ps <- subset_samples(ps, Island != "Blank")
# Clean up Sample Data names ####
names(sample_data(ps)) <-
c("LibraryID","Barcode","SampleID","Date","Island","Site","Lat","Lon","ReefType","Exposure",
"SpeciesTentative","SpeciesConfirmed","ColonyColor","AvgSiteTemp","TempRange_C","Salinity",
"SalinityRange_ppt","Depth_m","DepthRange_m","TempRangeMin","TempRangeMax","SalinityRangeMin",
"SalinityRangeMax","DepthRangeMin","DepthRangeMax")
# Convert Sample Data classes ####
glimpse(sample_data(ps))
ps@sam_data$LibraryID <- as.character(ps@sam_data$LibraryID)
ps@sam_data$Lat <- as.numeric(ps@sam_data$Lat)
ps@sam_data$Lon <- as.numeric(ps@sam_data$Lon)
ps@sam_data$AvgSiteTemp <- as.numeric(ps@sam_data$AvgSiteTemp)
ps@sam_data$Salinity <- as.numeric(ps@sam_data$Salinity)
ps@sam_data$Depth_m <- as.numeric(ps@sam_data$Depth_m)
# Change ColonyColor to non-ordered factor (Healthy Coral as reference category)
ps@sam_data$ColonyColor <- plyr::mapvalues(ps@sam_data$ColonyColor,from = unique(ps@sam_data$ColonyColor),
to=c("Healthy","Pale","Bleached","Very pale"))
ps@sam_data$ColonyColor <- factor(ps@sam_data$ColonyColor,
levels = c("Healthy","Pale","Very pale","Bleached"))
# create 4 groups of avg temperature
clus <- kmeans(na.omit(ps@sam_data$AvgSiteTemp), 3)
clus$cluster[which(!is.na(ps@sam_data$AvgSiteTemp))] <- clus$cluster
ps@sam_data$AvgSiteTempGroup <- clus$cluster
plot(ps@sam_data$AvgSiteTemp,ps@sam_data$AvgSiteTempGroup)
ps@sam_data$AvgSiteTempGroup <- plyr::mapvalues(ps@sam_data$AvgSiteTempGroup,
from=as.character(unique(ps@sam_data$AvgSiteTempGroup)),
to=c("<30.5","30.5-31",">31"))
ps@sam_data$AvgSiteTempGroup[which(is.na(ps@sam_data$AvgSiteTemp))] <- NA
# convert to non-ordered factor
ps@sam_data$AvgSiteTempGroup <- factor(ps@sam_data$AvgSiteTempGroup,
levels = c("<30.5","30.5-31",">31"))
# Remove unneeded columns
ps@sam_data[,grep("Range",names(ps@sam_data))] <- NULL
ps@sam_data$Barcode <- NULL
ps@sam_data$SpeciesTentative <- NULL
ps@sam_data
skimr::skim(ps@sam_data)
unique(ps@tax_table[,2])
# Clean up non-bacterial taxa ####
bact <- subset_taxa(ps, Kingdom == "Bacteria")
bact <- subset_taxa(bact, Phylum != "Cyanobacteria")
bact <- subset_taxa(bact, Family != "Mitochondria")
ps <- bact
# Save cleaned phyloseq object
saveRDS(ps, "./output/cleaned_ps_object.RDS")
# Merge by various factors ####
# Island
ps_island = merge_samples(ps,"Island")
# Repair metadata
ps_island@sam_data$Island <- row.names(ps_island@sam_data)
# Rel-abund
ps_island_ra <- transform_sample_counts(ps_island, function(x) x/sum(x))
saveRDS(ps_island_ra,"output/ps_island_ra.RDS")
ps@sam_data$ColonyColor
# Colony Color
ps_color <- merge_samples(ps,"ColonyColor")
# Repair metadata
ps_color@sam_data$ColonyColor <- row.names(ps_color@sam_data)
# Rel-abund
ps_color_ra <- transform_sample_counts(ps_color, function(x) x/sum(x))
saveRDS(ps_color_ra,"./output/ps_color_ra.RDS")
# Packages and functions ####
library(tidyverse)
library(phyloseq)
theme_set(theme_bw())
# Load phyloseq object from 01_Process_Raw_Data.R ####
ps <- readRDS("./output/phyloseq_object_16S_noncontam.RDS")
# Remove non-bacteria/archaea ####
ps <- subset_taxa(ps, Kingdom %in% c("Bacteria","Archaea"))
# Inspect and clean taxonomy
ps <- subset_taxa(ps, Phylum != "NA")
# Tidy up metadata ... proper date format, temp and salinity ranges, etc ####
# List sample variables
glimpse(ps@sam_data)
# Dates
ps@sam_data$date <- as.POSIXct(ps@sam_data$date,format = '%m/%d/%Y')
# Temp
ps@sam_data$`Temp Range (oC)`[is.na(ps@sam_data$`Temp Range (oC)`)] <- "NA-NA"
ps@sam_data$`Temp Range (oC)`[ps@sam_data$`Temp Range (oC)`=="Blank"] <- "Blank-Blank"
min <- as.numeric(unlist(map(str_split(ps@sam_data$`Temp Range (oC)`,"-"),1)))
max <- as.numeric(unlist(map(str_split(ps@sam_data$`Temp Range (oC)`,"-"),2)))
ps@sam_data$TempRangeMin <- min
ps@sam_data$TempRangeMax <- max
# Salinity
ps@sam_data$`Salinity Range (ppt)`[is.na(ps@sam_data$`Salinity Range (ppt)`)] <- "NA-NA"
ps@sam_data$`Salinity Range (ppt)`[ps@sam_data$`Salinity Range (ppt)`=="Blank"] <- "Blank-Blank"
min <- as.numeric(unlist(map(str_split(ps@sam_data$`Salinity Range (ppt)`,"-"),1)))
max <- as.numeric(unlist(map(str_split(ps@sam_data$`Salinity Range (ppt)`,"-"),2)))
ps@sam_data$SalinityRangeMin <- min
ps@sam_data$SalinityRangeMax <- max
# Depth
ps@sam_data$`Depth Range (m)` <- str_remove(ps@sam_data$`Depth Range (m)`,pattern = "m")
ps@sam_data$`Depth Range (m)`[is.na(ps@sam_data$`Depth Range (m)`)] <- "NA-NA"
ps@sam_data$`Depth Range (m)`[ps@sam_data$`Depth Range (m)`=="Blank"] <- "Blank-Blank"
min <- as.numeric(unlist(map(str_split(ps@sam_data$`Depth Range (m)`,"-"),1)))
max <- as.numeric(unlist(map(str_split(ps@sam_data$`Depth Range (m)`,"-"),2)))
ps@sam_data$DepthRangeMin <- min
ps@sam_data$DepthRangeMax <- max
# Remove Blank Controls ####
ps <- subset_samples(ps, Island != "Blank")
# Clean up Sample Data names ####
names(sample_data(ps)) <-
c("LibraryID","Barcode","SampleID","Date","Island","Site","Lat","Lon","ReefType","Exposure",
"SpeciesTentative","SpeciesConfirmed","ColonyColor","AvgSiteTemp","TempRange_C","Salinity",
"SalinityRange_ppt","Depth_m","DepthRange_m","TempRangeMin","TempRangeMax","SalinityRangeMin",
"SalinityRangeMax","DepthRangeMin","DepthRangeMax")
# Convert Sample Data classes ####
glimpse(sample_data(ps))
ps@sam_data$LibraryID <- as.character(ps@sam_data$LibraryID)
ps@sam_data$Lat <- as.numeric(ps@sam_data$Lat)
ps@sam_data$Lon <- as.numeric(ps@sam_data$Lon)
ps@sam_data$AvgSiteTemp <- as.numeric(ps@sam_data$AvgSiteTemp)
ps@sam_data$Salinity <- as.numeric(ps@sam_data$Salinity)
ps@sam_data$Depth_m <- as.numeric(ps@sam_data$Depth_m)
# Change ColonyColor to non-ordered factor (Healthy Coral as reference category)
ps@sam_data$ColonyColor <- plyr::mapvalues(ps@sam_data$ColonyColor,from = unique(ps@sam_data$ColonyColor),
to=c("Healthy","Pale","Bleached","Very pale"))
ps@sam_data$ColonyColor <- factor(ps@sam_data$ColonyColor,
levels = c("Healthy","Pale","Very pale","Bleached"))
# create 4 groups of avg temperature
clus <- kmeans(na.omit(ps@sam_data$AvgSiteTemp), 3)
clus$cluster[which(!is.na(ps@sam_data$AvgSiteTemp))] <- clus$cluster
ps@sam_data$AvgSiteTempGroup <- clus$cluster
plot(ps@sam_data$AvgSiteTemp,ps@sam_data$AvgSiteTempGroup)
ps@sam_data$AvgSiteTempGroup <- plyr::mapvalues(ps@sam_data$AvgSiteTempGroup,
from=as.character(unique(ps@sam_data$AvgSiteTempGroup)),
to=c("<30.5","30.5-31",">31"))
ps@sam_data$AvgSiteTempGroup[which(is.na(ps@sam_data$AvgSiteTemp))] <- NA
# convert to non-ordered factor
ps@sam_data$AvgSiteTempGroup <- factor(ps@sam_data$AvgSiteTempGroup,
levels = c("<30.5","30.5-31",">31"))
# Remove unneeded columns
ps@sam_data[,grep("Range",names(ps@sam_data))] <- NULL
ps@sam_data$Barcode <- NULL
ps@sam_data$SpeciesTentative <- NULL
ps@sam_data
skimr::skim(ps@sam_data)
unique(ps@tax_table[,2])
# Clean up non-bacterial taxa ####
bact <- subset_taxa(ps, Kingdom == "Bacteria")
bact <- subset_taxa(bact, Phylum != "Cyanobacteria")
bact <- subset_taxa(bact, Family != "Mitochondria")
ps <- bact
# Save cleaned phyloseq object
saveRDS(ps, "./output/cleaned_ps_object.RDS")
# Merge by various factors ####
# Island
ps_island = merge_samples(ps,"Island")
# Repair metadata
ps_island@sam_data$Island <- row.names(ps_island@sam_data)
# Rel-abund
ps_island_ra <- transform_sample_counts(ps_island, function(x) x/sum(x))
saveRDS(ps_island_ra,"output/ps_island_ra.RDS")
ps@sam_data$ColonyColor
# Colony Color
ps_color <- merge_samples(ps,"ColonyColor")
# Repair metadata
ps_color@sam_data$ColonyColor <- row.names(ps_color@sam_data)
# Rel-abund
ps_color_ra <- transform_sample_counts(ps_color, function(x) x/sum(x))
saveRDS(ps_color_ra,"./output/ps_color_ra.RDS")
# Analyses of Chagos Islands coral-associated bacteria 16S Amplicons
# Author: Geoffrey Zahn
# Packages and functions ####
library(tidyverse)
library(phyloseq)
library(vegan)
library(MASS)
library(car)
library(ggmap)
library(corncob)
library(patchwork)
library(fantaxtic)
source("./R/plot_bar2.R")
# Register Google Maps Key
register_google(" AIzaSyDbHOebkeBsope7kQX0fxnyx7sC_v0ap6w ")
# Custom color palette
pal = c("#c4a113","#c1593c","#643d91","#820616","#477887","#688e52",
"#12aa91","#705f36","#8997b2","#753c2b","#3c3e44","#b3bf2d",
"#82b2a4","#894e7d","#a17fc1","#262a8e","#abb5b5","#000000",
"#493829","#816C5B","#A9A18C","#613318","#855723","#B99C6B",
"#8F3B1B","#D57500","#DBCA69","#404F24","#668D3C","#BDD09F",
"#4E6172","#83929F","#A3ADB8")
palplot <- colorblindr::palette_plot(pal)
# Load data ####
ps <- readRDS("./output/cleaned_ps_object.RDS")
psm_island_ra <- readRDS("./output/ps_island_ra.RDS")
psm_color_ra <- readRDS("./output/ps_color_ra.RDS")
# Transform full phyloseq object to relative abundance ####
ps_ra <- transform_sample_counts(ps, function(x) x/sum(x))
# clean taxa names
ps <- clean_taxa_names(ps)
# Look at metadata ####
names(sample_data(ps))
skimr::skim(sample_data(ps_ra))
apply(ps_ra@sam_data,2,table)
# make data frame of sample data ####
meta = as(sample_data(ps_ra),"data.frame")
# Map of sites ####
chagosmap <- get_map(location = c(lon=mean(ps_ra@sam_data$Lon),
lat=mean(ps_ra@sam_data$Lat)),
source="google", maptype="terrain", crop=FALSE, zoom = 9)
ggmap(chagosmap) +
geom_point(data = meta,aes(y=Lat,x=Lon))
ggplot(meta, aes(x=Lon,y=Lat)) + geom_point()
# Initial Plots
plot_bar2(psm_color_ra,fill = "Phylum") + scale_fill_manual(values=pal)
# Plot richness based on ColonyColor ####
plot_richness(ps,x="ColonyColor",measures=c("Shannon","Observed"))
richness = specnumber(otu_table(ps_ra))
shannon = diversity(otu_table(ps_ra),index = "shannon")
plot(ps_ra@sam_data$AvgSiteTemp,shannon)
names(sample_data(ps_ra))
# Model basic alpha diversity based on all factors ####
mod.shannon = aov(data=meta, shannon ~ (Island + ColonyColor + AvgSiteTemp)* SpeciesConfirmed)
mod.richness = aov(data=meta, richness ~ (Island + ColonyColor + AvgSiteTemp)* SpeciesConfirmed)
summary(mod.shannon)
summary(mod.richness)
# Stepwise AIC
step = stepAIC(mod.shannon)
summary(step)
step2 = stepAIC(mod.richness)
summary(step)
summary(step2)
# Shannon model: Island and AvgSiteTemp are significant
# Richness model: Island, AvgSiteTemp, AvgSiteTemp:SpeciesConfirmed are significant
#                 ColonyColor is 'not quite significant'
# What is correlation between ColonyColor and AvgSiteTemp
plot(meta$ColonyColor,meta$AvgSiteTemp)
ggplot(meta, aes(x=ColonyColor,y=AvgSiteTemp,fill=ColonyColor)) +
geom_boxplot(alpha=.5) + geom_point(alpha=.5) +
labs(y="Mean Site Temperature",x="Colony Color",fill="Colony Color")
ggsave("./output/figs/Temp_vs_ColonyColor.png",dpi=300)
# Differential Abundance Based on Colony Color ####
# Find differentially-abundant groups...plot them as in http://statisticaldiversitylab.com/blog/167093
names(sample_data(ps))
set.seed(123)
da_analysis <- differentialTest(formula = ~ ColonyColor, #abundance
phi.formula = ~ 1, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/colonycolor_differential_abundance_plot.png",width = 8,dpi = 300)
sigs_colcolor <- otu_to_taxonomy(OTU = da_analysis$significant_taxa, data = ps)
length(sigs_colcolor)
# Plot differentially-abundant taxa (Colony Color) ####
# glm models with ColonyColor and no intercept
sigs_colcolor
colorblindr::palette_plot(pal)
set.seed(123)
corncob_da1 <- bbdml(formula = OTU8 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
p1 <- plot(corncob_da1,color="ColonyColor") + ggtitle(sigs_colcolor[1]) +
scale_color_manual(values = pal[c(11,4,6,1)]) +
theme(axis.text.x = element_blank())
set.seed(123)
corncob_da2 <- bbdml(formula = OTU14 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
p2 <- plot(corncob_da2,color="ColonyColor") + ggtitle(sigs_colcolor[2]) +
scale_color_manual(values = pal[c(11,4,6,1)]) +
theme(axis.text.x = element_blank())
set.seed(123)
corncob_da3 <- bbdml(formula = OTU24 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
p3 <- plot(corncob_da3,color="ColonyColor") + ggtitle(sigs_colcolor[3]) +
scale_color_manual(values = pal[c(11,4,6,1)]) +
theme(axis.text.x = element_blank())
set.seed(123)
corncob_da4 <- bbdml(formula = OTU36 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
p4 <- plot(corncob_da4,color="ColonyColor") + ggtitle(sigs_colcolor[4]) +
scale_color_manual(values = pal[c(11,4,6,1)]) +
theme(axis.text.x = element_blank())
set.seed(123)
corncob_da5 <- bbdml(formula = OTU110 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
p5 <- plot(corncob_da5,color="ColonyColor") + ggtitle(sigs_colcolor[5]) +
scale_color_manual(values = pal[c(11,4,6,1)]) +
theme(axis.text.x = element_blank())
# set.seed(321)
# corncob_da6 <- bbdml(formula = OTU140 ~ ColonyColor,
#                      phi.formula = ~ ColonyColor,
#                      data = ps)
#
# p6 <- plot(corncob_da6,color="ColonyColor") + ggtitle(sigs_colcolor[6]) +
#   scale_color_manual(values = pal[c(11,3,6,1)]) +
#   theme(axis.text.x = element_blank())
# combine figs with patchwork
combined_plots <- p1/p2/p3/p4/p5#/p6
combined_plots
ggsave(combined_plots,filename = "./output/figs/ColonyColor_diff_abund_taxa.png",
height = 18,width = 12,dpi = 300,device = "png")
# Export stats tables
sink("./output/stats/corncob_ColonyColor_tables.txt")
print(sigs_colcolor[1])
corncob_da1
print(sigs_colcolor[2])
corncob_da2
print(sigs_colcolor[3])
corncob_da3
print(sigs_colcolor[4])
corncob_da4
print(sigs_colcolor[5])
corncob_da5
sink(NULL)
# Plot differentially-abundant taxa by avg site temp ####
# Differential abundance test by temperature group
set.seed(123)
da_analysis_temp <- differentialTest(formula = ~ AvgSiteTempGroup, #abundance
phi.formula = ~ AvgSiteTempGroup, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps,
fdr_cutoff = 0.05)
plot(da_analysis_temp)
ggsave("./output/figs/tempgroup_differential_abundance_plot.png")
sigs_tempgroup <- otu_to_taxonomy(OTU = da_analysis_temp$significant_taxa, data = ps)
length(sigs_tempgroup)
length(ps@sam_data$AvgSiteTempGroup)
levels(ps@sam_data$AvgSiteTempGroup)
set.seed(123)
corncob_da7 <- bbdml(formula = OTU1 ~ AvgSiteTempGroup,
phi.formula = ~ AvgSiteTempGroup,
data = subset_samples(ps,AvgSiteTempGroup %in% levels(ps@sam_data$AvgSiteTempGroup)))
p7 <- plot(corncob_da7,color = "AvgSiteTempGroup") + ggtitle(sigs_tempgroup[1]) +
scale_color_manual(values = pal[c(11,3,6)]) +
theme(axis.text.x = element_blank())
set.seed(123)
corncob_da8 <- bbdml(formula = OTU3 ~ AvgSiteTempGroup,
phi.formula = ~ AvgSiteTempGroup,
data = subset_samples(ps,AvgSiteTempGroup %in% levels(ps@sam_data$AvgSiteTempGroup)))
p8 <- plot(corncob_da8,color="AvgSiteTempGroup") + ggtitle(sigs_tempgroup[2]) +
scale_color_manual(values = pal[c(11,3,6)]) +
theme(axis.text.x = element_blank())
temp_group_plot <- p7 / p8
temp_group_plot
ggsave(temp_group_plot,filename = "./output/figs/TempGroup_diff_abund_taxa.png",
dpi=300,width = 12, height = 6,device = "png")
# Relative abundance plots ####
# Top 12 taxa with highest relative abundance
top12 <- get_top_taxa(ps, 11, relative = TRUE, discard_other = FALSE,
other_label = "Other")
# Transform top-12 phyloseq object to relative abundance #
top12_ra <- transform_sample_counts(top12, function(x) x/sum(x))
ps_family <- phyloseq::tax_glom(top12_ra, "Family")
phyloseq::taxa_names(ps_family) <- phyloseq::tax_table(ps_family)[, "Family"]
#Melt and plot
phyloseq::psmelt(ps_family) %>%
ggplot(data = ., aes(x = ColonyColor, y = Abundance,color=ColonyColor)) +
geom_boxplot(outlier.shape  = NA) +
geom_jitter(height = 0, width = .2,alpha=.5) +
labs(x = "", y = "Abundance\n") +
facet_wrap(~ OTU, scales = "free") +
theme(legend.position = "bottom", axis.text.x = element_blank()) +
scale_color_manual(values = pal[c(11,3,6,1)])
ggsave("./output/figs/most_abundant_families_by_colonycolor.png",dpi=300)
# Ordinations ####
# Transform full phyloseq object to relative abundance (again)
ps_ra <- transform_sample_counts(ps, function(x) x/sum(x))
dca <- ordinate(ps_ra,method="DCA")
nmds <- ordinate(ps_ra,method = "NMDS")
plot_ordination(ps,dca,color = "ColonyColor")
ggsave("./output/figs/DCA_Ordination_by_ColonyColor.png",dpi=300)
plot_ordination(ps,dca,color = "Island")
ggsave("./output/figs/DCA_Ordination_by_Island.png",dpi=300)
plot_ordination(ps,dca,color = "ColonyColor")
# Melt and plot
phyloseq::psmelt(ps_family) %>%
ggplot(data = ., aes(x = ColonyColor, y = Abundance,color=ColonyColor)) +
geom_boxplot(outlier.shape  = NA) +
geom_jitter(height = 0, width = .2,alpha=.5) +
labs(x = "", y = "Abundance\n") +
facet_wrap(~ OTU, scales = "free") +
theme(legend.position = "bottom", axis.text.x = element_blank()) +
scale_color_manual(values = pal[c(11,4,6,1)])
ggsave("./output/figs/most_abundant_families_by_colonycolor.png",dpi=300,width = 10,height = 6)
plot_ordination(ps,dca,color = "ColonyColor") + scale_color_manual(values = c(11,4,6,1))
plot_ordination(ps,dca,color = "ColonyColor") + scale_color_manual(values = pal[c(11,4,6,1)])
ggsave("./output/figs/tempgroup_differential_abundance_plot.png",width = 12,height = 6)
plot(da_analysis_temp)
ggsave("./output/figs/tempgroup_differential_abundance_plot.png",width = 12,height = 6)
plot(da_analysis)
ggsave("./output/figs/colonycolor_differential_abundance_plot.png",dpi = 300,width = 14,height = 6)
plot(da_analysis_temp)
ggsave("./output/figs/tempgroup_differential_abundance_plot.png",width = 16,height = 6)
# Analyses of Chagos Islands coral-associated bacteria 16S Amplicons
# Differential abundance analyses
# Author: Geoffrey Zahn
# Packages and functions ####
library(tidyverse)
library(phyloseq)
library(vegan)
library(MASS)
library(car)
library(ggmap)
library(corncob)
library(patchwork)
library(fantaxtic)
source("./R/plot_bar2.R")
# Custom color palette
pal = c("#c4a113","#c1593c","#643d91","#820616","#477887","#688e52",
"#12aa91","#705f36","#8997b2","#753c2b","#3c3e44","#b3bf2d",
"#82b2a4","#894e7d","#a17fc1","#262a8e","#abb5b5","#000000",
"#493829","#816C5B","#A9A18C","#613318","#855723","#B99C6B",
"#8F3B1B","#D57500","#DBCA69","#404F24","#668D3C","#BDD09F",
"#4E6172","#83929F","#A3ADB8")
palplot <- colorblindr::palette_plot(pal)
# Load data ####
ps <- readRDS("./output/cleaned_ps_object.RDS")
# Differential Abundance Based on Colony Color ####
# Find differentially-abundant groups...plot them as in http://statisticaldiversitylab.com/blog/167093
names(sample_data(ps))
set.seed(123)
da_analysis <- differentialTest(formula = ~ ColonyColor, #abundance
phi.formula = ~ 1, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/colonycolor_differential_abundance_plot.png",dpi = 300,width = 14,height = 6)
sigs_colcolor <- otu_to_taxonomy(OTU = da_analysis$significant_taxa, data = ps)
length(sigs_colcolor)
sigs_colcolor
colorblindr::palette_plot(pal)
set.seed(123)
corncob_da1 <- bbdml(formula = OTU8 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
corncob_da1 <- bbdml(formula = OTU8 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
ps
corncob_da1 <- bbdml(formula = OTU8 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
# Load data ####
ps <- readRDS("./output/cleaned_ps_object.RDS")
ps
otu_table(ps)
plot(otu_table(ps))
ord=ordinate(ps)
plot_ordination(ps)
diversity(otu_table(ps))
plot(diversity(otu_table(ps)))
da_analysis
sigs_colcolor <- otu_to_taxonomy(OTU = da_analysis$significant_taxa, data = ps)
sigs_colcolor
length(sigs_colcolor)
set.seed(123)
corncob_da1 <- bbdml(formula = OTU8 ~ ColonyColor,
phi.formula = ~ ColonyColor,
data = ps)
# Analyses of Chagos Islands coral-associated bacteria 16S Amplicons
# Differential abundance analyses
# Author: Geoffrey Zahn
# Packages and functions ####
library(tidyverse)
library(phyloseq)
library(vegan)
library(MASS)
library(car)
library(ggmap)
library(corncob)
library(patchwork)
library(fantaxtic)
source("./R/plot_bar2.R")
# Custom color palette
pal = c("#c4a113","#c1593c","#643d91","#820616","#477887","#688e52",
"#12aa91","#705f36","#8997b2","#753c2b","#3c3e44","#b3bf2d",
"#82b2a4","#894e7d","#a17fc1","#262a8e","#abb5b5","#000000",
"#493829","#816C5B","#A9A18C","#613318","#855723","#B99C6B",
"#8F3B1B","#D57500","#DBCA69","#404F24","#668D3C","#BDD09F",
"#4E6172","#83929F","#A3ADB8")
palplot <- colorblindr::palette_plot(pal)
# Load data ####
ps <- readRDS("./output/cleaned_ps_object.RDS")
# clean taxa names
ps <- clean_taxa_names(ps)
# Differential Abundance Based on Colony Color ####
# Find differentially-abundant groups...plot them as in http://statisticaldiversitylab.com/blog/167093
names(sample_data(ps))
set.seed(123)
da_analysis <- differentialTest(formula = ~ ColonyColor, #abundance
phi.formula = ~ 1, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/colonycolor_differential_abundance_plot.png",dpi = 300,width = 14,height = 6)
sigs_colcolor <- otu_to_taxonomy(OTU = da_analysis$significant_taxa, data = ps)
length(sigs_colcolor)
